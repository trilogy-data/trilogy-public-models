{
  "name": "Orbital Propellant Through the Years",
  "layout": [
    {
      "x": 4,
      "y": 41,
      "w": 12,
      "h": 7,
      "i": "0"
    },
    {
      "x": 4,
      "y": 63,
      "w": 6,
      "h": 5,
      "i": "2"
    },
    {
      "x": 4,
      "y": 0,
      "w": 12,
      "h": 7,
      "i": "3"
    },
    {
      "x": 4,
      "y": 35,
      "w": 12,
      "h": 6,
      "i": "4"
    },
    {
      "x": 4,
      "y": 68,
      "w": 12,
      "h": 6,
      "i": "5"
    },
    {
      "x": 4,
      "y": 74,
      "w": 12,
      "h": 7,
      "i": "7"
    },
    {
      "x": 4,
      "y": 96,
      "w": 6,
      "h": 5,
      "i": "9"
    },
    {
      "x": 10,
      "y": 7,
      "w": 6,
      "h": 4,
      "i": "10"
    },
    {
      "x": 4,
      "y": 15,
      "w": 12,
      "h": 8,
      "i": "11"
    },
    {
      "x": 4,
      "y": 53,
      "w": 12,
      "h": 10,
      "i": "12"
    },
    {
      "x": 4,
      "y": 86,
      "w": 12,
      "h": 10,
      "i": "13"
    },
    {
      "x": 4,
      "y": 7,
      "w": 6,
      "h": 4,
      "i": "15"
    },
    {
      "x": 4,
      "y": 81,
      "w": 12,
      "h": 5,
      "i": "16"
    },
    {
      "x": 4,
      "y": 48,
      "w": 12,
      "h": 5,
      "i": "17"
    },
    {
      "x": 4,
      "y": 11,
      "w": 12,
      "h": 4,
      "i": "18"
    },
    {
      "x": 10,
      "y": 63,
      "w": 6,
      "h": 5,
      "i": "19"
    },
    {
      "x": 10,
      "y": 96,
      "w": 6,
      "h": 5,
      "i": "20"
    },
    {
      "x": 4,
      "y": 23,
      "w": 12,
      "h": 12,
      "i": "21"
    }
  ],
  "gridItems": {
    "0": {
      "type": "chart",
      "content": "WHERE\n    (vehicle.stage_no = '1' or vehicle.stage_no = '0')\nSELECT\n    vehicle.stage.engine.group,\n    vehicle.stage.engine.group_hex,\n    launch_date.year,\n    --sum(orb_pay) as fuel_contribution,\n    (fuel_contribution /  sum(sum(orb_pay) by launch_date.year, vehicle.stage.engine.group) by launch_date.year)*100 -> percent_orbital_payload,\nHAVING\n    fuel_contribution > 0\n;",
      "name": "% of Year's Payload to Orbit (tonnes) by First Stage Fuel",
      "width": 973,
      "height": 235,
      "allowCrossFilter": true,
      "chartConfig": {
        "chartType": "area",
        "xField": "launch_date_year",
        "yField": "percent_orbital_payload",
        "colorField": "vehicle_stage_engine_group",
        "sizeField": "",
        "groupField": "",
        "trellisField": "",
        "geoField": "",
        "annotationField": "",
        "hideLegend": false,
        "showTitle": true,
        "scaleY": ""
      },
      "parameters": {}
    },
    "2": {
      "type": "chart",
      "content": "WHERE\n        vehicle.stage_no in ('0', '1')\nSELECT\n    stage_identifier,\n    org.state_code,\n    org.hex,\n    sum(orb_pay)-> orbital_payload,\nORDER BY\n    orbital_payload desc\nLIMIT 10\n;",
      "name": "Top First Stage Launchers",
      "width": 482,
      "height": 155,
      "allowCrossFilter": true,
      "chartConfig": {
        "chartType": "barh",
        "xField": "orbital_payload",
        "yField": "stage_identifier",
        "yField2": "",
        "colorField": "org_state_code",
        "sizeField": "",
        "groupField": "",
        "trellisField": "",
        "geoField": "",
        "annotationField": "",
        "hideLegend": false,
        "showTitle": true,
        "scaleX": ""
      },
      "parameters": {}
    },
    "3": {
      "type": "markdown",
      "content": {
        "markdown": "# Orbital Rocket Propellant Through The Years\n\nClick charts to cross-filter. Global filters can be applied in the top search bar. Click 'edit' to customize everything - the dashboard is local to you, and safe to change. \n\nData: *McDowell, Jonathan C., 2020. General Catalog of Artificial Space Objects, Release 1.7.3 , https://planet4589.org/space/gcat*\n\nRocket propulsion has relied on a wide range of fuels, each balancing power, efficiency, and practicality. Early spaceflight was dominated by kerosene and hypergolic propellants that were reliable, storable, and suited for military use as many rockets were derived from military vehicles. Solid propellants enabled rapid-response launches and missiles. Over time, liquid oxygen + kerosene (LOX/Kero) became the workhorse of general purpose orbital launch, while LOX/Liquid Hydrogen offered unmatched efficiency for upper stages. Recently, new combinations like LOX/Methane are emerging, aiming for cleaner performance, reusability, and payload maximization.",
        "query": ""
      },
      "name": "Note 3",
      "width": 973,
      "height": 235,
      "allowCrossFilter": true,
      "parameters": {}
    },
    "4": {
      "type": "markdown",
      "content": {
        "markdown": "## First Stage Fuels\n\nFirst stage fuels include boosters + main rocket. {launch_count} launches by {rockets} rockets. Average ISP for this stage is {average_isp} [Isp can be loosely considered a measure of efficiency for rocket engines]. \n\n### Top 3 Fuels in Filter Set\n{{#each fuel_payloads limit=3}}\n- {fuel}: {payload} tonnes to orbit (Success rate: {success_rate}% in {launches} launches)\n{{/each}}",
        "query": "\nimport std.display;\nWHERE\n    vehicle.stage_no in ('0', '1')\nSELECT\n    launch_count,\n    sum(orb_pay) as payload_to_orbit,\n    count(vehicle.full_name) as rockets,\n    round(avg(group(vehicle.stage.engine.isp) by launch_tag),2) -> average_isp,\n    array_sort(array_agg(\n        struct(\n        round(coalesce(sum(orb_pay) by vehicle.stage.engine.fuel,0),3)  ->payload , \n        vehicle.stage.engine.fuel  ->fuel,\n        count(launch_tag) by vehicle.stage.engine.fuel -> launches,\n        @calc_percent(\n            (count(launch_tag ? was_complete_success ) by vehicle.stage.engine.fuel), \n            (count(launch_tag) by vehicle.stage.engine.fuel)\n            , 2\n         )*100 ->success_rate \n       \n         )\n    ), desc) as fuel_payloads\n;\n"
      },
      "name": "Note 3",
      "width": 973,
      "height": 195,
      "allowCrossFilter": true,
      "parameters": {}
    },
    "5": {
      "type": "markdown",
      "content": {
        "markdown": "## Upper Stages (stage 2,3,4,+)\n{launch_count} launches by {rockets} rockets. Average ISP {average_isp}. \n\n### Top 3 Fuels in Filter Set\n{{#each fuel_payloads limit=3}}\n- {fuel}: {payload} tonnes to orbit (Success rate: {success_rate}% in {launches} launches)\n{{/each}}",
        "query": "\nimport std.display;\nWHERE\n    vehicle.stage_no in ('2', '3', '4')\nSELECT\n    launch_count,\n    sum(orb_pay) as payload_to_orbit,\n    count(vehicle.full_name) as rockets,\n    round(avg(group(vehicle.stage.engine.isp) by launch_tag),2) -> average_isp,\n    array_sort(array_agg(\n        struct(\n        round(coalesce(sum(orb_pay) by vehicle.stage.engine.fuel,0),3)  ->payload , \n        vehicle.stage.engine.fuel  ->fuel,\n        count(launch_tag) by vehicle.stage.engine.fuel -> launches,\n        @calc_percent(\n            (count(launch_tag ? was_complete_success ) by vehicle.stage.engine.fuel), \n            (count(launch_tag) by vehicle.stage.engine.fuel)\n            , 2\n         )*100 ->success_rate \n       \n         )\n    ), desc) as fuel_payloads\n;\n"
      },
      "name": "Note 3",
      "width": 973,
      "height": 195,
      "allowCrossFilter": true,
      "parameters": {}
    },
    "7": {
      "type": "chart",
      "content": "WHERE\n    vehicle.stage_no in ('2', '3', '4')\n    and vehicle.stage.engine.group is not null\nSELECT\n    vehicle.stage.engine.group,\n    vehicle.stage.engine.group_hex,\n    launch_date.year,\n    --sum(orb_pay) as fuel_contribution,\n    (fuel_contribution /  sum(sum(orb_pay) by launch_date.year, vehicle.stage.engine.group) by launch_date.year)*100 -> percent_orbital_payload,\n\nhaving fuel_contribution>0;",
      "name": "% of Year's Payload to Orbit (tonnes) by Upper Stage Fuel",
      "width": 973,
      "height": 235,
      "allowCrossFilter": true,
      "chartConfig": {
        "chartType": "area",
        "xField": "launch_date_year",
        "yField": "percent_orbital_payload",
        "colorField": "vehicle_stage_engine_group",
        "sizeField": "",
        "groupField": "",
        "trellisField": "",
        "geoField": "",
        "annotationField": "",
        "hideLegend": false,
        "showTitle": true,
        "scaleY": ""
      },
      "parameters": {}
    },
    "9": {
      "type": "chart",
      "content": "WHERE\n    vehicle.stage_no in ('2', '3', '4')\nSELECT\n    stage_identifier,\n    org.state_code,\n    org.hex,\n    sum(orb_pay) -> orbital_payload,\nORDER BY\n    orbital_payload desc\nLIMIT 10\n;",
      "name": "Top Upper Stage Launchers",
      "width": 482,
      "height": 155,
      "allowCrossFilter": true,
      "chartConfig": {
        "chartType": "barh",
        "xField": "orbital_payload",
        "yField": "stage_identifier",
        "yField2": "",
        "colorField": "org_state_code",
        "sizeField": "",
        "groupField": "",
        "trellisField": "",
        "geoField": "",
        "annotationField": "",
        "hideLegend": false,
        "showTitle": true
      },
      "parameters": {}
    },
    "10": {
      "type": "chart",
      "content": "SELECT\n    org.flag,\nORDER BY\n    org.flag asc\n;",
      "name": "National Grouping (Click to filter, click title to clear)",
      "width": 482,
      "height": 115,
      "allowCrossFilter": false,
      "chartConfig": {
        "chartType": "headline",
        "xField": "",
        "yField": "",
        "yField2": "",
        "colorField": "",
        "sizeField": "",
        "groupField": "",
        "trellisField": "",
        "geoField": "",
        "annotationField": "",
        "hideLegend": false,
        "showTitle": true
      },
      "parameters": {}
    },
    "11": {
      "type": "chart",
      "content": "SELECT\n    vehicle.stage.engine.group,\n    vehicle.stage.engine.fuel,\n    vehicle.stage.engine.fuel_hex,\n    sum(orb_pay) -> payload_to_orbit,\n    count(launch_tag ? orb_pay >0) as orbital_launches,\nhaving\n    vehicle.stage.engine.fuel is not null\nORDER BY\n    orbital_launches desc\nLIMIT 30\n;",
      "name": "Fuel Groups",
      "width": 973,
      "height": 275,
      "allowCrossFilter": true,
      "chartConfig": {
        "chartType": "barh",
        "xField": "orbital_launches",
        "yField": "vehicle_stage_engine_group",
        "yField2": "",
        "colorField": "vehicle_stage_engine_fuel",
        "sizeField": "",
        "groupField": "",
        "trellisField": "",
        "geoField": "",
        "annotationField": "",
        "hideLegend": false,
        "showTitle": true,
        "scaleY": "",
        "scaleX": ""
      },
      "parameters": {}
    },
    "12": {
      "type": "chart",
      "content": "WHERE\r\n    (vehicle.stage_no = '1')\r\nSELECT\r\n    vehicle.stage.engine.group,\r\n    vehicle.stage.engine.name,\r\n    vehicle.stage.engine.isp,\r\n    vehicle.stage.engine.thrust,\r\n    vehicle.stage.engine.group_hex,\r\n    launch_count,\r\nhaving \r\n    cast(vehicle.stage.engine.isp as int)>30 \r\norder by launch_count desc\r\nlimit 150;",
      "name": "By Engine: ISP vs Thrust",
      "width": 973,
      "height": 355,
      "allowCrossFilter": true,
      "chartConfig": {
        "chartType": "point",
        "xField": "vehicle_stage_engine_isp",
        "yField": "vehicle_stage_engine_thrust",
        "yField2": "",
        "colorField": "vehicle_stage_engine_group",
        "sizeField": "launch_count",
        "groupField": "",
        "trellisField": "",
        "geoField": "",
        "annotationField": "vehicle_stage_engine_name",
        "hideLegend": false,
        "showTitle": true,
        "scaleY": "log",
        "scaleX": ""
      },
      "parameters": {}
    },
    "13": {
      "type": "chart",
      "content": "WHERE\r\n    vehicle.stage_no in ('2', '3', '4')\r\nSELECT\r\n    vehicle.stage.engine.group,\r\n    vehicle.stage.engine.name,\r\n    vehicle.stage.engine.isp,\r\n    vehicle.stage.engine.thrust,\r\n    vehicle.stage.engine.group_hex,\r\n    launch_count\r\nhaving \r\n    cast(vehicle.stage.engine.isp as int)>30\r\norder by\r\n    launch_count desc\r\nlimit 150;",
      "name": "Upper Stage Engines: ISP vs Thrust",
      "width": 973,
      "height": 355,
      "allowCrossFilter": true,
      "chartConfig": {
        "chartType": "point",
        "xField": "vehicle_stage_engine_isp",
        "yField": "vehicle_stage_engine_thrust",
        "yField2": "",
        "colorField": "vehicle_stage_engine_group",
        "sizeField": "launch_count",
        "groupField": "",
        "trellisField": "",
        "geoField": "",
        "annotationField": "vehicle_stage_engine_name",
        "hideLegend": false,
        "showTitle": true,
        "scaleY": "log",
        "scaleX": ""
      },
      "parameters": {}
    },
    "15": {
      "type": "chart",
      "content": "SELECT\n    era\nORDER BY\n    era asc\n\n;",
      "name": "Space Era (Click to filter, click title to clear)",
      "width": 482,
      "height": 115,
      "allowCrossFilter": false,
      "chartConfig": {
        "chartType": "headline",
        "xField": "",
        "yField": "",
        "yField2": "",
        "colorField": "",
        "sizeField": "",
        "groupField": "",
        "trellisField": "",
        "geoField": "",
        "annotationField": "",
        "hideLegend": false,
        "showTitle": true
      },
      "parameters": {}
    },
    "16": {
      "type": "chart",
      "content": "WHERE\n    vehicle.stage_no in ('2', '3', '4')\nSELECT\n    launch_date.year,\n    sum(orb_pay) as payload_to_orbit,\n    launch_count;",
      "name": "Total Upper Stage Payload",
      "width": 973,
      "height": 155,
      "allowCrossFilter": true,
      "chartConfig": {
        "chartType": "area",
        "xField": "launch_date_year",
        "yField": "payload_to_orbit",
        "yField2": "launch_count",
        "colorField": "",
        "sizeField": "",
        "groupField": "",
        "trellisField": "",
        "geoField": "",
        "annotationField": "",
        "hideLegend": false,
        "showTitle": true,
        "scaleY": ""
      },
      "parameters": {}
    },
    "17": {
      "type": "chart",
      "content": "WHERE\n    vehicle.stage_no in ('0', '1')\nSELECT\n    launch_date.year,\n    sum(orb_pay) as payload_to_orbit,\n    launch_count;",
      "name": "Total First Stage Payload to Orbit",
      "width": 973,
      "height": 155,
      "allowCrossFilter": true,
      "chartConfig": {
        "chartType": "area",
        "xField": "launch_date_year",
        "yField": "payload_to_orbit",
        "yField2": "launch_count",
        "colorField": "",
        "sizeField": "",
        "groupField": "",
        "trellisField": "",
        "geoField": "",
        "annotationField": "",
        "hideLegend": false,
        "showTitle": true,
        "scaleY": ""
      },
      "parameters": {}
    },
    "18": {
      "type": "markdown",
      "content": {
        "markdown": "## Fuel Groups\n\nThe charts are broken down by either specific fuels or fuel group, which are typically fuel/oxidizer pairs. (Rocket combustion typically uses both an oxidizing agent and a reducing agent (fuel), though there are monopropellents used, such as [Hydrazine](https://en.wikipedia.org/wiki/Hydrazine)). The current filters, we're looking at {group_count} fuel/oxidizer pairs and {fuel_count} total fuels. ",
        "query": "SELECT\n    count(vehicle.stage.engine.group) -> group_count,\n    count(vehicle.stage.engine.fuel) -> fuel_count,\n;"
      },
      "name": "Note 3",
      "width": 973,
      "height": 115,
      "allowCrossFilter": true,
      "parameters": {}
    },
    "19": {
      "type": "chart",
      "content": "WHERE\n    vehicle.stage_no in ('0', '1')\nSELECT\n    vehicle.stage.engine.name,\n    org.state_code,\n    org.hex,\n    sum(orb_pay)-> orbital_payload,\nORDER BY\n    orbital_payload desc\nLIMIT 10\n;",
      "name": "Top First Stage Engines",
      "width": 482,
      "height": 155,
      "allowCrossFilter": true,
      "chartConfig": {
        "chartType": "barh",
        "xField": "orbital_payload",
        "yField": "vehicle_stage_engine_name",
        "yField2": "",
        "colorField": "org_state_code",
        "sizeField": "",
        "groupField": "",
        "trellisField": "",
        "geoField": "",
        "annotationField": "",
        "hideLegend": false,
        "showTitle": true,
        "scaleX": ""
      },
      "parameters": {}
    },
    "20": {
      "type": "chart",
      "content": "WHERE\n    vehicle.stage_no in ('2', '3', '4')\nSELECT\n    vehicle.stage.engine.name,\n    org.state_code,\n    org.hex,\n    sum(orb_pay) -> orbital_payload,\nORDER BY\n    orbital_payload desc\nLIMIT 10\n;",
      "name": "Top Upper Stage Engines",
      "width": 482,
      "height": 155,
      "allowCrossFilter": true,
      "chartConfig": {
        "chartType": "barh",
        "xField": "orbital_payload",
        "yField": "vehicle_stage_engine_name",
        "yField2": "",
        "colorField": "org_state_code",
        "sizeField": "",
        "groupField": "",
        "trellisField": "",
        "geoField": "",
        "annotationField": "",
        "hideLegend": false,
        "showTitle": true
      },
      "parameters": {}
    },
    "21": {
      "type": "chart",
      "content": "SELECT\n    vehicle.stage.engine.oxidizer,\n    vehicle.stage.engine.fuel,\n\n    --sum(orb_pay) as orb_payload,\n    log(vehicle.stage.engine.name.count) as log_engine_count,\n    vehicle.stage.engine.name.count\nhaving\n    vehicle.stage.engine.fuel is not null and\n    orb_payload>1\n;",
      "name": "Fuel Group Popularity by Engine Count",
      "width": 973,
      "height": 435,
      "allowCrossFilter": true,
      "chartConfig": {
        "chartType": "heatmap",
        "xField": "vehicle_stage_engine_oxidizer",
        "yField": "vehicle_stage_engine_fuel",
        "yField2": "",
        "colorField": "log_engine_count",
        "sizeField": "",
        "groupField": "",
        "trellisField": "",
        "geoField": "",
        "annotationField": "vehicle_stage_engine_name_count",
        "hideLegend": true,
        "showTitle": true,
        "scaleY": "",
        "scaleX": ""
      },
      "parameters": {}
    }
  },
  "nextId": 24,
  "createdAt": "2025-09-06T00:32:39.918Z",
  "updatedAt": "2025-09-27T16:21:59.965Z",
  "filter": "",
  "imports": [
    {
      "name": "fuel_dashboard",
      "alias": ""
    }
  ],
  "version": 1,
  "state": "published",
  "description": ""
}