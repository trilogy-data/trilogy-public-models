{
  "name": "Satellites by Owner",
  "layout": [
    {
      "x": 2,
      "y": 9,
      "w": 16,
      "h": 8,
      "i": "1"
    },
    {
      "x": 2,
      "y": 25,
      "w": 16,
      "h": 10,
      "i": "2"
    },
    {
      "x": 2,
      "y": 1,
      "w": 16,
      "h": 8,
      "i": "4"
    },
    {
      "x": 2,
      "y": 17,
      "w": 16,
      "h": 8,
      "i": "6"
    },
    {
      "x": 2,
      "y": 35,
      "w": 16,
      "h": 8,
      "i": "7"
    },
    {
      "x": 2,
      "y": 0,
      "w": 16,
      "h": 1,
      "i": "9"
    }
  ],
  "gridItems": {
    "1": {
      "type": "chart",
      "content": "where decom_date is null and base_category='P'\nSELECT\n    op_orbit,\n    # apogee,\n    # perigee,\n    bus,\n    --name,\n    jcat,\n    owner.name,\n    --state.name,\n    length*span as length_x_span ,\n    # base_category,\n    # heat_color,\nlimit 10000;\n",
      "name": "Active Constellation View (max size - 10000)",
      "width": 1765,
      "height": 275,
      "allowCrossFilter": true,
      "chartConfig": {
        "chartType": "beeswarm",
        "xField": "op_orbit",
        "yField": "length_x_span",
        "yField2": "",
        "colorField": "bus",
        "sizeField": "length_x_span",
        "groupField": "",
        "trellisField": "",
        "geoField": "",
        "annotationField": "owner_name",
        "hideLegend": false,
        "showTitle": true
      },
      "parameters": {},
      "conceptFilters": [
        {
          "source": "9",
          "value": {
            "owner.u_code": "COSMOG"
          }
        }
      ],
      "filters": [
        {
          "source": "cross",
          "value": "owner.u_code='''COSMOG'''"
        }
      ],
      "chartFilters": []
    },
    "2": {
      "type": "chart",
      "content": "SELECT\n    launch.site.latitude,\n    launch.site.longitude,\n    launch.org.e_name,\n    jcat.count -> satellites_launched,\nHAVING\n    launch.site.latitude is not null\n    and satellites_launched>0\n\n;",
      "name": "Launch Locations",
      "width": 1765,
      "height": 355,
      "allowCrossFilter": true,
      "chartConfig": {
        "chartType": "usa-map",
        "xField": "launch_site_longitude",
        "yField": "launch_site_latitude",
        "yField2": "",
        "colorField": "launch_org_e_name",
        "sizeField": "satellites_launched",
        "groupField": "",
        "trellisField": "",
        "geoField": "",
        "annotationField": "",
        "hideLegend": false,
        "showTitle": true
      },
      "parameters": {},
      "conceptFilters": [
        {
          "source": "9",
          "value": {
            "owner.u_code": "COSMOG"
          }
        }
      ],
      "filters": [
        {
          "source": "cross",
          "value": "owner.u_code='''COSMOG'''"
        }
      ],
      "chartFilters": []
    },
    "4": {
      "type": "markdown",
      "content": {
        "markdown": "# {headline_name} \n\n*Locations: {headline_location}*\n\n## Satellite Inventory\n\nActive satellites: {total_satellites} ({decommed_satellites} decommed), first launch on {first_launch} and last launch {last_launch}.\n\n### Satellite Buses\n{{#each per_bus_counts}}\n- {bus_name}: {bus_count}\n{{/each}}",
        "query": "def sort(x)-> x.bus_count;\r\n\r\ndef filter(x) -> x.bus_count >0;\r\n\r\nselect\r\n    case \r\n        when count(owner.e_name)>4 then 'Many (' || count(owner.e_name)::string || ')' \r\n        else array_to_string(array_agg(owner.e_name), ', ')\r\n        end as \r\n    headline_name,\r\n    case \r\n        when count(owner.e_name)>4 then 'N/A'\r\n        else any(owner.location)\r\n        end as \r\n    headline_location,\r\n    count(jcat ? decom_date is null and base_category = 'P') as total_satellites,\r\n    count(jcat ? decom_date is not null and base_category = 'P') as decommed_satellites,\r\n    array_sort(array_filter(array_agg( struct(\r\n        bus -> bus_name, count(jcat ? base_category = 'P') by bus ->bus_count\r\n    )), @filter),desc) as per_bus_counts,\r\n    min(launch_date)::string as first_launch,\r\n    max(launch_date)::string as last_launch\r\n\r\n;"
      },
      "name": "Note 4",
      "width": 1765,
      "height": 275,
      "allowCrossFilter": true,
      "parameters": {},
      "conceptFilters": [
        {
          "source": "9",
          "value": {
            "owner.u_code": "COSMOG"
          }
        }
      ],
      "filters": [
        {
          "source": "cross",
          "value": "owner.u_code='''COSMOG'''"
        }
      ],
      "chartFilters": []
    },
    "6": {
      "type": "chart",
      "content": "\r\n\r\nauto launches <- count(jcat ? base_category = 'P') by launch_date;\r\nauto decoms <- count(jcat ? decom_date is not null and base_category = 'P'  ) by decom_date;\r\n\r\n\r\nselect\r\n    launch_date,\r\n    sum launches order by launch_date asc as cumulative_launches,\r\nhaving\r\n    cumulative_launches >=1\r\nmerge\r\nselect\r\n    decom_date,\r\n    sum decoms order by decom_date asc as cumulative_decoms,\r\nhaving cumulative_decoms >=1\r\nmerge\r\nselect\r\n    current_date() as today,\r\n    count(jcat ? base_category = 'P') as final_size,\r\n    count(jcat ? decom_date is not null and base_category = 'P'  ) as final_decom\r\n\r\n# merge\r\n# select\r\n#     display_spine\r\nalign date:launch_date, decom_date, today\r\nderive coalesce(final_size, cumulative_launches)->launch_display,\r\ncoalesce(final_decom, cumulative_decoms)->decom_display;",
      "name": "Constellation Churn",
      "width": 1765,
      "height": 275,
      "allowCrossFilter": true,
      "chartConfig": {
        "chartType": "line",
        "xField": "date",
        "yField": "launch_display",
        "yField2": "decom_display",
        "colorField": "",
        "sizeField": "",
        "groupField": "",
        "trellisField": "",
        "geoField": "",
        "annotationField": "",
        "hideLegend": false,
        "showTitle": true,
        "linkY2": true
      },
      "parameters": {},
      "conceptFilters": [
        {
          "source": "9",
          "value": {
            "owner.u_code": "COSMOG"
          }
        }
      ],
      "filters": [
        {
          "source": "cross",
          "value": "owner.u_code='''COSMOG'''"
        }
      ],
      "chartFilters": []
    },
    "7": {
      "type": "chart",
      "content": "SELECT\n    launch.org.e_name,\n    jcat.count -> satellites_launched,\n    jcat.count/ launch.launch_tag.count as satellites_per_launch\norder by satellites_launched desc\nlimit 10\n;",
      "name": "Launch Providers",
      "width": 1765,
      "height": 275,
      "allowCrossFilter": true,
      "chartConfig": {
        "chartType": "barh",
        "xField": "satellites_launched",
        "yField": "launch_org_e_name",
        "yField2": "",
        "colorField": "satellites_per_launch",
        "sizeField": "satellites_launched",
        "groupField": "",
        "trellisField": "",
        "geoField": "",
        "annotationField": "",
        "hideLegend": false,
        "showTitle": true
      },
      "parameters": {},
      "conceptFilters": [
        {
          "source": "9",
          "value": {
            "owner.u_code": "COSMOG"
          }
        }
      ],
      "filters": [
        {
          "source": "cross",
          "value": "owner.u_code='''COSMOG'''"
        }
      ],
      "chartFilters": []
    },
    "9": {
      "type": "filter",
      "content": "select\n    concat(array_to_string(array_agg(owner.e_name), ', '), ' (', active_satellites::string, ' active satellites)') as satellite_owner,\n    owner.u_code,\n    --count(jcat ? decom_date is null and base_category = 'P') as active_satellites\nhaving\nactive_satellites>0;",
      "name": "Note 9",
      "width": 1765,
      "height": -5,
      "allowCrossFilter": true,
      "parameters": {},
      "chartFilters": [
        {
          "source": "9"
        }
      ],
      "conceptFilters": [],
      "filters": []
    }
  },
  "nextId": 10,
  "createdAt": "2025-10-10T18:52:02.708Z",
  "updatedAt": "2025-10-29T23:41:45.200Z",
  "filter": "",
  "imports": [
    {
      "name": "satcat",
      "alias": ""
    }
  ],
  "version": 1,
  "state": "editing",
  "description": ""
}